spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 数据库连接地址
    url: jdbc:mysql://127.0.0.1:3306/yygh_manage?characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    # 数据库用户名&密码：
    username: root
    password: root
    # 初始化时建立物理连接的个数
    initialSize: 5
    # 最小连接池数量
    minIdle: 5
    # 最大连接池数量 maxIdle已经不再使用
    maxActive: 20
    # 获取连接时最大等待时间，单位毫秒
    maxWait: 60000
    # 既作为检测的间隔时间又作为testWhileIdel执行的依据
    timeBetweenEvictionRunsMillis: 60000
    # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
    minEvictableIdleTimeMillis: 30000
    # 用来检测连接是否有效的sql 必须是一个查询语句
    # mysql中为 select 'x'
    # oracle中为 select 1 from dual
    validationQuery: select 'x'
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    testOnBorrow: false
    # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    testOnReturn: false
    # 是否缓存preparedStatement
    poolPreparedStatements: true
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    # 配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
    # 如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
    # 则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
    filters: stat,wall,slf4j
    maxPoolPreparedStatementPerConnectionSize: 20
    #    useGlobalDataDourceDtat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000